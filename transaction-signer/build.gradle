plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVer"
    id 'maven'
}

group 'jp.co.soramitsu.orillion'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    gradlePluginPortal()
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // Iroha 2
    compile "com.github.hyperledger.iroha-java:client:$iroha2Ver"
    compile "com.github.hyperledger.iroha-java:model:$iroha2Ver"

    //crypto
    compile "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVer"
    compile "net.i2p.crypto:eddsa:$i2pCryptoEddsa"
    compile "com.github.multiformats:java-multihash:$multihashVersion"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = 11
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = 11
    }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'jp.co.soramitsu.orillion.signer.TransactionSignerKt'
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from (configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}
